<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Works on Hugo Artists Theme</title>
    <link>https://shiohiyoko.github.io/port/work/</link>
    <description>Recent content in Works on Hugo Artists Theme</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="https://shiohiyoko.github.io/port/work/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title></title>
      <link>https://shiohiyoko.github.io/port/work/proj-1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://shiohiyoko.github.io/port/work/proj-1/</guid>
      <description>競技内容 この年のテーマは「新大陸の開拓」でした．港からスタートし，海をわたって新大陸に砦を築く，というモチーフです．
細かく言うと，箱を港や途中の島から回収し，新大陸でその箱をタワー型に積み上げるという方針です． 詳しくはこちら
コンセプト この競技内容に対して，自チームは箱をロボットの中に詰めるだけ詰めて運び，積み上げる方式を取りました．
担当箇所 我々のロボットは大きく分けて
走行系,ピックアップ機構,セットアップ機構,装填機構，コントローラ
の５つの仕事内容がありました．
この内私は走行系，装填機構，コントローラのプログラム，回路設計を担当しました．
この時に得た能力 組み込み系のプログラムの書き方
18v駆動モーターの制御
回路のデバッグ方法
シリアル通信
PID制御
自分がやったことの詳細 プログラムと回路設計 
メカナムホイールを用いた走行系
赤外線センサを用いて角材を認識し，走行系のタイヤをジャッキアップする部分
プログラムだけ
装填した箱をシーケンス的に箱を押し出す機構
角位置センサによる押出機構の制御
感想 この時は何もかもが初めてで，うまくロボットを動かせずに初戦負けで終わりました．
この大会で他のチームとの圧倒的な技術力の差を知ったため，その差を埋めるため，春休みに開発を進めようと決心しました．</description>
    </item>
    
    <item>
      <title></title>
      <link>https://shiohiyoko.github.io/port/work/proj-2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://shiohiyoko.github.io/port/work/proj-2/</guid>
      <description>競技内容 相手の本陣についた風船を全部割るか，相手についた風船をより多く割った方の勝利
全国大会の動画
コンセプト 動いている相手の風船を割るより，本陣を狙うほうが割りやすいので，猛スピードで相手の本陣まで移動し，2軸の2本のアームを使って風船を割ることにした
ロボットの動作 マウス型コントローラを2つ使い，それぞれの座標に2軸のロボットアームが追従する
担当箇所 ロボット2台の走行系と2軸アームのプログラムと回路設計
練習風景はこちら
この時に得た能力 PD制御
躍度最小
同構造型マスタースレーブの制御
自分がやったことの詳細 クリックして詳細を表示できます
人の腕を教示してそれをロボットにフィードバックする部分
人の腕に腕の関節の角度を読むセンサを取り付け，その角度をロボットのアームにフィードバックして腕の操作性を上げた
初めの頃はロボットの腕の関節が片方に4つあったため，人間の肩を2軸，肘，そして腕のひねりを計測し，操作していた 
作動二輪・3輪オムニの制御
作動2輪はタイヤを2個使った走行系で，ロボットの移動速度を上げる目的で使った
3輪オムニはオムニホイールを3つ使った全方位移動を可能にするために使った 
自作マウスとロボットとの通信
4軸のアームから2軸のアームに変更した際に自作のマウスを2個使ってアームを制御し，そこから得た値をアームの座標系に変換し，シリアル通信でデータを転送した．

風船を割るパーツの作成
風船を簡単に割る道具が必要になり，機械版の手が空いてなかったため，私が設計した．

相手ロボットと一定の距離を保つプログラム
距離センサを3つ使って測定し，そこから得た距離により相手との距離感を保った
動画はこちら 
発射機構の制御
コントローラから発射シーケンスが送られたら，発射するようにした
動画はこちら 
反省 あまり新しいことをやってなかった
コントローラとロボットとの同期に時間がかかりすぎた
感想 この年のロボットはあまり新しいことに挑戦せず，確実に動くロボットを作ったため，昨年より楽に作業が進んだ． ただ，一番大変だったのは自チームのロボットが4軸あった時のコントローラとの同期だった．
ロボット側も，コントローラ側もセンサの初期値が毎回変動するため，そこの調整の自動化を怠ったため，時間がかかった．</description>
    </item>
    
    <item>
      <title></title>
      <link>https://shiohiyoko.github.io/port/work/proj-3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://shiohiyoko.github.io/port/work/proj-3/</guid>
      <description>競技内容　 フィールドの中央付近に設置された大小様々なテーブルにフリスビーを投げて，より多くフリスビーを乗せる，またはテーブル全てに乗せたチームの勝利
大会ルール説明
コンセプト この競技ではただ乗せるだけの機能を持ったロボットでは華がないと思い，相手のフリスビーを撃ち落とすことのできるものを作ることにした．
ロボットの動作 発射機構を2つ搭載し，片方は手前のテーブルを狙い，もうひとつは相手の飛ばしたフリスビーを追撃する
担当箇所 撃ち落とし機構の制御と回路設計
この時に得た能力 opencv for c#
自分がやったことの詳細 pseyeカメラを2つ使い，相手のフリスビーの位置を特定し，追従する
飛ぶ方向を予測し，そこにめがけてフリスビーを発射する
動画はこちら
反省 自分の担当箇所で詰まってしまい，ロボットの実装に時間がかかってしまった
追従精度が悪い状態で開発を進めてしまったため，ちゃんと撃ち落とさずに終わってしまった
もっと実験動画をとっておくべきだった
感想 高専ロボコンが終わったあとの春休みに始めたため，人手とやる気があまりなかった．
この競技のルール発表が夏休みあたりにあったため，他の大学より大幅に遅れていたこともあり，開発が間に合わず，大会出場はできなかった．</description>
    </item>
    
  </channel>
</rss>